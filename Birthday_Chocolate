Problem statement :
Birthday Chocolate
Lily has a chocolate bar with numbered squares. She wants to share it with Ron for his birthday. She
decides to share a contiguous segment of the bar selected such that the sum of the integers on the
squares is equal to a given value. The length of the segment will match Ron's birth month. The sum of the
segments will match his birth day. You must determine how many ways she can divide the chocolate.
Consider the chocolate bar as an array of squares, . She wants to find segments
summing to Ron's birth day, with a length equalling his birth month, . In this case, there are
two segments meeting her criteria.
Input Format
The first line contains an integer , the number of squares in the chocolate bar.
The second line contains space-separated integers , the numbers on the chocolate squares where
.
The third line contains two space-separated integers, and , Ron's birth day and his birth month.
Constraints
, where ( )
Output Format
Print an integer denoting the total number of ways that Lily can portion her chocolate bar to share with
Ron.
Sample Input 0
5
1 2 1 3 2
3 2
Sample Output 0
2
Explanation 0
Lily wants to give Ron squares summing to . The following two segments meet the criteria:
Sample Input 1
6
1 1 1 1 1 1
3 2
Sample Output 1
0
Explanation 1
Lily only wants to give Ron consecutive squares of chocolate whose integers sum to . There
are no possible pieces satisfying these constraints:
Thus, we print as our answer.
Sample Input 2
1
4
4 1
Sample Output 2
1
Explanation 2
Lily only wants to give Ron square of chocolate with an integer value of . Because the only
square of chocolate in the bar satisfies this constraint, we print as our answer.


Solution:
n = int(input())
arr = []
for i in range(n):
    arr.append(int(input()))
d,m = map(int,input().split())
count = 0
for k in range(len(arr)):
    compare = sum(arr[i:i+m])
    if compare == d:
        count += 1
print(count)
